// Code generated by protoc-gen-go.
// source: pwr/overlay/overlay.proto
// DO NOT EDIT!

/*
Package overlay is a generated protocol buffer package.

It is generated from these files:
	pwr/overlay/overlay.proto

It has these top-level messages:
	OverlayHeader
	OverlayOp
*/
package overlay

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OverlayOp_Type int32

const (
	OverlayOp_SKIP           OverlayOp_Type = 0
	OverlayOp_FRESH          OverlayOp_Type = 1
	OverlayOp_HEY_YOU_DID_IT OverlayOp_Type = 2040
)

var OverlayOp_Type_name = map[int32]string{
	0:    "SKIP",
	1:    "FRESH",
	2040: "HEY_YOU_DID_IT",
}
var OverlayOp_Type_value = map[string]int32{
	"SKIP":           0,
	"FRESH":          1,
	"HEY_YOU_DID_IT": 2040,
}

func (x OverlayOp_Type) String() string {
	return proto.EnumName(OverlayOp_Type_name, int32(x))
}
func (OverlayOp_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type OverlayHeader struct {
}

func (m *OverlayHeader) Reset()                    { *m = OverlayHeader{} }
func (m *OverlayHeader) String() string            { return proto.CompactTextString(m) }
func (*OverlayHeader) ProtoMessage()               {}
func (*OverlayHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type OverlayOp struct {
	Type OverlayOp_Type `protobuf:"varint,1,opt,name=type,enum=io.itch.wharf.pwr.overlay.OverlayOp_Type" json:"type,omitempty"`
	Len  int64          `protobuf:"varint,2,opt,name=len" json:"len,omitempty"`
	Data []byte         `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *OverlayOp) Reset()                    { *m = OverlayOp{} }
func (m *OverlayOp) String() string            { return proto.CompactTextString(m) }
func (*OverlayOp) ProtoMessage()               {}
func (*OverlayOp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OverlayOp) GetType() OverlayOp_Type {
	if m != nil {
		return m.Type
	}
	return OverlayOp_SKIP
}

func (m *OverlayOp) GetLen() int64 {
	if m != nil {
		return m.Len
	}
	return 0
}

func (m *OverlayOp) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*OverlayHeader)(nil), "io.itch.wharf.pwr.overlay.OverlayHeader")
	proto.RegisterType((*OverlayOp)(nil), "io.itch.wharf.pwr.overlay.OverlayOp")
	proto.RegisterEnum("io.itch.wharf.pwr.overlay.OverlayOp_Type", OverlayOp_Type_name, OverlayOp_Type_value)
}

func init() { proto.RegisterFile("pwr/overlay/overlay.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x28, 0x2f, 0xd2,
	0xcf, 0x2f, 0x4b, 0x2d, 0xca, 0x49, 0xac, 0x84, 0xd1, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42,
	0x92, 0x99, 0xf9, 0x7a, 0x99, 0x25, 0xc9, 0x19, 0x7a, 0xe5, 0x19, 0x89, 0x45, 0x69, 0x7a, 0x05,
	0xe5, 0x45, 0x7a, 0x50, 0x05, 0x4a, 0xfc, 0x5c, 0xbc, 0xfe, 0x10, 0xa6, 0x47, 0x6a, 0x62, 0x4a,
	0x6a, 0x91, 0xd2, 0x22, 0x46, 0x2e, 0x4e, 0xa8, 0x88, 0x7f, 0x81, 0x90, 0x2d, 0x17, 0x4b, 0x49,
	0x65, 0x41, 0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x9f, 0x91, 0xa6, 0x1e, 0x4e, 0x83, 0xf4, 0xe0,
	0x7a, 0xf4, 0x42, 0x2a, 0x0b, 0x52, 0x83, 0xc0, 0xda, 0x84, 0x04, 0xb8, 0x98, 0x73, 0x52, 0xf3,
	0x24, 0x98, 0x14, 0x18, 0x35, 0x98, 0x83, 0x40, 0x4c, 0x21, 0x21, 0x2e, 0x96, 0x94, 0xc4, 0x92,
	0x44, 0x09, 0x66, 0x05, 0x46, 0x0d, 0x9e, 0x20, 0x30, 0x5b, 0xc9, 0x80, 0x8b, 0x05, 0xa4, 0x47,
	0x88, 0x83, 0x8b, 0x25, 0xd8, 0xdb, 0x33, 0x40, 0x80, 0x41, 0x88, 0x93, 0x8b, 0xd5, 0x2d, 0xc8,
	0x35, 0xd8, 0x43, 0x80, 0x51, 0x48, 0x98, 0x8b, 0xcf, 0xc3, 0x35, 0x32, 0x3e, 0xd2, 0x3f, 0x34,
	0xde, 0xc5, 0xd3, 0x25, 0xde, 0x33, 0x44, 0xe0, 0x07, 0xbf, 0x13, 0x67, 0x14, 0x3b, 0xd4, 0xde,
	0x24, 0x36, 0xb0, 0x17, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x05, 0x46, 0x8f, 0xc2, 0xff,
	0x00, 0x00, 0x00,
}
